
        <section class="hero" id="login">
            <form action="#">
                <div id="error"></div>
                <div class="ig">
                    <label for="email">Email:</label>
                    <input type="text" name="email" id="email">
                </div>

                <div class="ig">
                    <label for="pw">Password:</label>
                    <input type="password" name="pw" id="pw">
                </div>
                <button id="loginButton">Login</button>
            </form>
                   
        </section>

<script>


    const loginFormHandler = async e => {
        e.preventDefault()
        email = document.getElementById('email').value.trim()
        password = document.getElementById('pw').value.trim()


        if (email && password) {
            response = await fetch('/api/users/login', {
                method: 'POST',
                body: JSON.stringify({email, password}),
                headers: {'Content-Type': 'application/json'},
            });



            if (response.ok){
                console.log(response)
                const responseData = await response.json()
                const user_id = responseData.user.id
                document.location.replace(`/users/${user_id}`)
            } else {
                const errorSlot = document.getElementById('error')
                errorSlot.textContent = "Incorrect email address or password. Please try again"
            }
        }

    }


    const loginButton = document.getElementById('loginButton').addEventListener('click', loginFormHandler)






</script>


{{!-- 
router.post("/login", async (req, res) => {
  try {
    const userData = await User.findOne({ where: { email: req.body.email } });
    if (!userData) {
      res
        .status(400)
        .json({ message: "Incorrect email or password, please try again" });
      return;
    }
    // validating the password
    const validPassword = await userData.checkPassword(req.body.password);
    if (!validPassword) {
      res
        .status(400)
        .json({ message: "Incorrect email or password, please try again" });
      return;
    }
    // Once the user successfully logs in, set up the sessions variable 'loggedIn'
    req.session.save(() => {
      req.session.user_id = userData.id;
      req.session.email = userData.email;
      req.session.loggedIn = true;

      res
        .status(200)
        .json({ user: userData, message: "You are now logged in!" });
    });
  } catch (error) {
    console.log(error);
    res.status(500).json({ message: `An ${error} has occured.` });
  }
}); --}}