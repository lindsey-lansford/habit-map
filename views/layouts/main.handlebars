<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://kit.fontawesome.com/1939b32d5e.js" defer crossorigin="anonymous"></script>
    <title>Habit Stack</title>
</head>
<body>
    <header>
        <nav>
            {{#if loggedIn}}
            <div class="title"><a href="/users/{{user.id}}">Habit Stack</a></div>
            {{else}}
            <div class="title"><a href="/">Habit Stack</a></div>
            {{/if}}



            <ul>
                {{#if loggedIn}}
                <li>
                   <a class="settings_widget"><i class="fa-solid fa-gear settt fa-xl" alt="settings"></i></a>
                </li>
                {{else}}
                <li>
                   <a href="/login">Login</a>
                </li>
                {{/if}}
            </ul>
          
        </nav>
          <div class="settings">
                <form action="#" id="settings">
                    <h4>Update User</h4>
                <div id="error"></div>
                <div class="ig">
                    <label for="email_s">Email:</label>
                    <input type="text" name="email_s" id="email_s" autocomplete="email">
                </div>

                <div class="ig">
                    <label for="pw">Current Password:</label>
                    <input type="password" name="current-password" id="current-password" autocomplete="current-password">
                </div>
                <div class="ig">
                    <label for="pw_new">New Password:</label>
                    <input type="password" name="pw_new" id="new-password" autocomplete="new-password">
                </div>
                <div class="ig">
                    <div class="horiz">
                        <label for="delete_user" id="delabel">Delete Account</label>
                        <input type="checkbox" name="delete_user" id="delete_user">
                    </div>
                </div>
                <div class="buttons-row">
                    <button class="savePassword">Update</button>
                    <button class="cancelUpdate">Cancel</button>
                    <a href="/logout"><button class="loggy">Logout</button></a>
                </div>
            </form>
            </div>
    </header>
    <main>



       
{{{body}}}




    </main>
    <footer>
        <ul>
            <li>This is our placeholder footer</li>
        </ul>
    </footer>
    {{!-- <script src="js/script.js"></script> --}}
</body>
</html>

<script>
    let settings = document.getElementsByClassName('settings_widget');
    let settingsDrawer = document.getElementsByClassName('settings');
    let cancelUpdate = document.getElementsByClassName('cancelUpdate');
    let loggy = document.getElementsByClassName('loggy');
    let savePassword = document.getElementsByClassName('savePassword');

    let toggle = false;

    if (settings[0]){
            settings[0].addEventListener('click', (e) => {
        e.preventDefault()
        e.target.classList.add('rotator')
        if (toggle) {
            settingsDrawer[0].setAttribute('style', 'transform: translateY(0)')
            e.target.classList.remove('rotator')
        } else {
            settingsDrawer[0].setAttribute('style', 'transform: translateY(100vh)')
                }
        toggle = !toggle

    })
    }



    cancelUpdate[0].addEventListener('click', (e) => {
        e.preventDefault()
        settingsDrawer[0].setAttribute('style', 'transform: translateY(0vh)')
        settings[0].children[0].classList.remove('rotator')
    })

    loggy[0].addEventListener('click', (e) => {
        e.preventDefault()
         document.location.replace(`/logout`)
    })

    savePassword[0].addEventListener('click', async (e) => {
        e.preventDefault();
        let deleter = document.getElementById('delete_user').checked;
        let email = document.getElementById('email_s').value.trim();
        let oldPassword = document.getElementById('current-password').value.trim();
        let newPassword = document.getElementById('new-password').value.trim();
        const user_id = window.location.pathname.split('/')[2]
        console.log({
            deleter,
            email,
            oldPassword,
            newPassword
        });
        // User delete route
        if (deleter){
            
            response = await fetch(`/api/users/login`, {
                method: 'POST',
                body: JSON.stringify({user_id, email, password: oldPassword}),
                headers: {'Content-Type': 'application/json'},

            });
            if(response.ok){
                response = await fetch(`/api/users/${user_id}`, {
                    method: 'DELETE',
                    HEADER: {'Content-Type': 'applciation/json'},

                }); if(response.ok){
                    response = await fetch(`/api/users/logout`,{
                        method: 'POST',
                    }); if (response.ok){
                        document.location.replace('/')
                    }
                    
                } else{
                    console.log('real bad')
                }

            } else {
                const errorSlot = document.getElementById('error');
                errorSlot.textContent = 'Incorrect email or password'
            }

        // User update route
        } else {
            const updateUserRoute = async (email, oldPassword, newPassword) => {
                console.log({email, oldPassword, newPassword})
                response = await fetch(`/api/users/${user_id}`, {
                    method: 'PUT',
                    body: JSON.stringify({password: newPassword}),
                    headers: {'Content-Type': 'application/json'},
                }); if (response.ok){
                    console.log(response)
                    {{!-- document.location.replace(`/users/${user_id}`) --}}
                } else {
                    console.log('oh no')
                }
                settingsDrawer[0].setAttribute('style', 'transform: translateY(0vh)');
                settings[0].children[0].classList.remove('rotator');
            }
            const badPassword = () => {
                const errorSlot = document.getElementById('error');
       
                errorSlot.textContent = "Make sure your password is at least 8 characters";
            }
            newPassword.length > 8 ? updateUserRoute(email, oldPassword, newPassword) : badPassword()
        }
    })








</script>